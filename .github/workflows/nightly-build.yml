name: Nightly Build

on:
  schedule:
    # Run every day at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch: # Allow manual triggering

jobs:
  nightly-build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov flake8 black isort mypy
        
    - name: Run linting
      run: |
        echo "Running flake8..."
        flake8 src/ tests/ --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 src/ tests/ --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics
        
        echo "Running black check..."
        black --check src/ tests/
        
        echo "Running isort check..."
        isort --check-only src/ tests/
        
    - name: Run type checking
      run: |
        mypy src/ --ignore-missing-imports
        
    - name: Run tests with coverage
      run: |
        pytest tests/ --cov=src/ --cov-report=xml --cov-report=html
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false
        
    - name: Generate test report
      run: |
        echo "## Nightly Build Report - $(date)" >> nightly-report.md
        echo "" >> nightly-report.md
        echo "### Test Results" >> nightly-report.md
        pytest tests/ --tb=short >> nightly-report.md 2>&1 || true
        echo "" >> nightly-report.md
        echo "### Coverage Summary" >> nightly-report.md
        coverage report >> nightly-report.md 2>&1 || true
        
    - name: Create issue with nightly report
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const report = fs.readFileSync('nightly-report.md', 'utf8');
          
          await github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: `Nightly Build Report - ${new Date().toISOString().split('T')[0]}`,
            body: report,
            labels: ['nightly-build', 'automated']
          }); 